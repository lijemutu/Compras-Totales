@page "/"
@using Compras_Totales.Data

<h1>Busca tu producto</h1>

<p>A través de multiples páginas encuentra el mejor precio</p>

<EditForm   Model="@search" OnValidSubmit="@FindProducts">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <InputText id="searchName" @bind-Value="search.searchName"></InputText>
    <br />
    @*<button type="submit">Buscar</button>*@
</EditForm>

<button class="btn btn-primary p-1 m-1" @onclick="FindProducts">Buscar</button>

<div class="listing">
    @if (mlData.Count != 0)
    {
    <div class="row">
        @foreach (var item in mlData)
        {
        <div class="card col-lg-3 col-md-4 col-sm-12 p-2 m-2" style="width: 18rem;">
            <div class="p-1">
                <img class="logo-ml" src="@mlSearch.logoPath" alt="Vendor" width="50" height="50">
            </div>
            <div class="text-center">
                <img class="card-img-top product-image" src="@item.ThumbnailPath" alt="@item.Name">
                <div class="card-body">
                    <h5 class="card-title">@item.Name</h5>
                    <p class="card-text">Precio: @item.Price</p>
                    <a class="card-text" href="@item.Vendor">Vendedor: @item.Vendor</a>
                    <br />
                    <a href="@item.Url" class="btn btn-primary ml-color">Ir al enlace</a>
                </div>
            </div>
        </div>
        }
    </div>
    }
</div>

@code   
{
    private SearchModel search = new SearchModel();
    private List<SearchResponse> mlData = new List<SearchResponse>();
    private MLSearch mlSearch = new MLSearch() { };

    private async Task FindProducts()
    {
        mlData = await mlSearch.SearchRequestAsync(search);
        StateHasChanged();
    }
}